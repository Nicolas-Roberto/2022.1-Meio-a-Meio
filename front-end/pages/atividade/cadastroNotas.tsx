import Typography from "@mui/material/Typography";
import { createTheme, ThemeProvider } from "@mui/material/styles";
import Link from "@mui/material/Link";
import Container from "@mui/material/Container";
import Box from "@mui/material/Box";
import Head from "next/head";
import CssBaseline from "@mui/material/CssBaseline";
import Grid from "@mui/material/Grid";
import { useRouter } from "next/router";
import React, { useState, ChangeEvent } from "react";
import TextField from "@mui/material/TextField";
import Button from "@mui/material/Button";
import RadioGroup from "@mui/material/RadioGroup";
import FormControlLabel from "@mui/material/FormControlLabel";
import Radio from "@mui/material/Radio";
import FormControl from "@mui/material/FormControl";
import Select, { SelectChangeEvent } from "@mui/material/Select";
import MenuItem from "@mui/material/MenuItem";
import InputLabel from "@mui/material/InputLabel";

function Copyright(props: any) {
  return (
    <Typography
      variant="body2"
      color="text.secondary"
      align="center"
      {...props}
    >
      {"Copyright © "}
      <Link
        color="inherit"
        href="https://github.com/mdsreq-fga-unb/2022.1-Meio-a-Meio"
      >
        Meio a Meio
      </Link>{" "}
      {new Date().getFullYear()}
      {"."}
    </Typography>
  );
}

const theme = createTheme();

export default function CadastroNotas() {
  const [data, setData] = useState<any>({});
  const [errors, setErrors] = useState<any>({});
  const router = useRouter();
  const [professor, setProfessor] = React.useState("");
  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {
    event.preventDefault();
    if (handleCheckData()) {
      return;
    }
    router.push("/turma/listar");
  };
  const handleText = (e: ChangeEvent<HTMLInputElement>) => {
    const clearText = e.target.value.replace(/\d/, "");
    setData({ ...data, [e.target.name]: clearText });
    let tempErrors = errors;
    delete tempErrors[e.target.name];
    setErrors(tempErrors);
  };
  const handleChange = (event: SelectChangeEvent) => {
    setProfessor(event.target.value);
  };
  const handleCheckData = () => {
    const { nome_professor, nome_curso, nome_disciplina, nome_turma, nome_aluno, nota } = data;
    let emptyFields: any = {};
    if (!nome_professor || nome_professor.length === 0) {
      emptyFields.nome_professor = "Professor Inválido";
    }
    if (!nome_curso || nome_curso.length === 0) {
      emptyFields.nome_curso = "Curso Inválido";
    }
    if (!nome_disciplina || nome_disciplina.length === 0) {
      emptyFields.nome_disciplina = "Disciplina Inválida";
    }
    if (!nome_aluno || nome_aluno.length === 0) {
      emptyFields.nome_aluno = "Aluno Inválido";
    }
    if (!nome_turma || nome_turma.length === 0) {
      emptyFields.nome_turma = "Turma Inválida";
    }
    if (!nota || nota.length === 0) {
      emptyFields.nota = "Nota Inválida";
    }
    if (Object.keys(emptyFields).length > 0) {
      setErrors(emptyFields);
      return 1;
    }
    return 0;
  };
  return (
    <ThemeProvider theme={theme}>
      <Container component="main" maxWidth="lg">
        <CssBaseline />
        <Box
          sx={{
            marginTop: 8,
            display: "flex",
            flexDirection: "column",
            alignItems: "center",
          }}
        >
          <div>
            <Head>
              <title>Galdi</title>
              <meta name="description" content="Generated by meio a meio" />
              <link rel="icon" href="/images/icon.png" />
            </Head>
            {/* <Image src= "/images/logo.jpeg" width= '600px' height= '150px'/> */}
          </div>
          <Typography component="h1" variant="h5">
            Cadastro de Notas
          </Typography>
          <Box
            component="form"
            noValidate
            onSubmit={handleSubmit}
            sx={{ mt: 3 }}
          >
            <Grid container spacing={1}>
              <Grid item xs={4}>
                <FormControl sx={{ m: 0, minWidth: 200 }}>
                  <InputLabel id="professor" required>
                    Professor
                  </InputLabel>
                  <Select
                    labelId="demo-simple-select-helper-label"
                    id="demo-simple-select-helper"
                    value={data ? data.professor : ""}
                    onChange={handleChange}
                    error={errors.professor ? true : false}
                  >
                    <MenuItem value={1}>Alessandra</MenuItem>
                    <MenuItem value={2}>Fernanda</MenuItem>
                    <MenuItem value={3}>Gabriela</MenuItem>
                  </Select>
                </FormControl>
              </Grid>
              <Grid item xs={4}>
                <FormControl sx={{ m: 0, minWidth: 200 }}>
                  <InputLabel id="nome_curso" required>
                    Curso
                  </InputLabel>
                  <Select
                    labelId="demo-simple-select-helper-label"
                    id="demo-simple-select-helper"
                    value={data ? data.nome_curso : ""}
                    onChange={handleChange}
                    error={errors.nome_curso ? true : false}
                  >
                    <MenuItem value={1}>Ortopedia</MenuItem>
                    <MenuItem value={2}>Cardiologia</MenuItem>
                    <MenuItem value={3}>GO</MenuItem>
                  </Select>
                </FormControl>
              </Grid>
              <Grid item xs={4}>
                <FormControl sx={{ m: 0, minWidth: 200 }}>
                  <InputLabel id="nome_disciplina" required>
                  Disciplina
                  </InputLabel>
                  <Select
                    labelId="demo-simple-select-helper-label"
                    id="demo-simple-select-helper"
                    value={data ? data.nome_disciplina : ""}
                    onChange={handleChange}
                    error={errors.nome_disciplina ? true : false}
                  >
                    <MenuItem value={1}>Endocrinologia</MenuItem>
                    <MenuItem value={2}>Cirurgia Plástica</MenuItem>
                    <MenuItem value={3}>Angiologia</MenuItem>
                  </Select>
                </FormControl>
              </Grid>
              <Grid item xs={4}>
                <FormControl sx={{ m: 0, minWidth: 200 }}>
                  <InputLabel id="nome_turma" required>
                    Turma
                  </InputLabel>
                  <Select
                    labelId="demo-simple-select-helper-label"
                    id="demo-simple-select-helper"
                    value={data ? data.nome_turma : ""}
                    onChange={handleChange}
                    error={errors.nome_turma ? true : false}
                  >
                    <MenuItem value={1}>A</MenuItem>
                    <MenuItem value={2}>B</MenuItem>
                    <MenuItem value={3}>C</MenuItem>
                  </Select>
                </FormControl>
              </Grid>
              <Grid item xs={4}>
                <FormControl sx={{ m: 0, minWidth: 200 }}>
                  <InputLabel id="nome_aluno" required>
                    Aluno
                  </InputLabel>
                  <Select
                    labelId="demo-simple-select-helper-label"
                    id="demo-simple-select-helper"
                    value={data ? data.nome_aluno : ""}
                    onChange={handleChange}
                    error={errors.nome_aluno ? true : false}
                  >
                    <MenuItem value={1}>Guilherme</MenuItem>
                    <MenuItem value={2}>Bruna</MenuItem>
                    <MenuItem value={3}>Samuel</MenuItem>
                  </Select>
                </FormControl>
              </Grid>
              <Grid item xs={2.15}>
                <TextField
                  required
                  error={errors.nota ? true : false}
                  helperText={errors.nota || null}
                  fullWidth
                  id="nota"
                  label="Nota"
                  name="nota"
                  autoComplete="nota"
                  onChange={handleText}
                  value={data ? data.nota : ""}
                />
              </Grid>
              <Grid item xs={2.5}>
                <FormControl fullWidth>
                  <RadioGroup
                    row
                    aria-labelledby="demo-row-radio-buttons-group-label"
                    name="row-radio-buttons-group"
                    onChange={(e) => setData({ ...data, tipo: e.target.value })}
                    value={data ? data.tipo : null}
                  >
                    <FormControlLabel
                      value="prova"
                      control={<Radio />}
                      label="Prova?"
                    />
                  </RadioGroup>
                </FormControl>
              </Grid>
              <Grid item xs={10.2}>
                <TextField
                  fullWidth
                  name="observacoes"
                  label="Observações"
                  type="observacoes"
                  id="observacoes"
                />
              </Grid>
              <Button
                type="submit"
                fullWidth
                variant="contained"
                sx={{ mt: 3, mb: 2 }}
              >
                Cadastrar Nota de Atividade
              </Button>
              <Grid container justifyContent="center">
                <Grid item>
                  <Link href="/atividade/portal" variant="body2">
                    Retornar ao Menu Principal
                  </Link>
                </Grid>
              </Grid>
            </Grid>
          </Box>
        </Box>
        <Copyright sx={{ mt: 5 }} />
      </Container>
    </ThemeProvider>
  );
}
